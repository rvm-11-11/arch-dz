{
	"info": {
		"_postman_id": "34a87246-ecb0-4507-b880-4e5ad55dadf6",
		"name": "DZ10",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "localhost (local ports)",
			"item": [
				{
					"name": "0.1 health check orders service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.2 health check payment service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.3 health check delivery service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "0.4 health check store service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8084/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/payments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all deliveries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8083/deliveries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerUserId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/stores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 create order all good",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2031-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1 check order created and approved by all services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check order overall approved\", function () {",
									"",
									"    var expectedOrder = {",
									"            \"orderId\": pm.globals.get(\"orderId\"),",
									"            \"userId\": 15,",
									"            \"itemId\": 100,",
									"            \"price\": 3500,",
									"            \"deliveryDate\": \"2031-07-15T00:00:00Z\",",
									"            \"paymentStatus\": \"APPROVED\",",
									"            \"deliveryStatus\": \"APPROVED\",",
									"            \"storeStatus\": \"APPROVED\",",
									"            \"overallStatus\": \"APPROVED\"",
									"        };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. create order price too high",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 57000,\r\n    \"deliveryDate\": \"2031-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 check order created but payment rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"// pm.globals.set(\"orderId1CreatedAt\", jsonData.createdAt);",
									"",
									"// pm.test(\"Check status is NEW\", function () {",
									"//     pm.expect(jsonData.status).to.eql(\"NEW\");",
									"// });",
									"",
									"// pm.test(\"Check total sum is correct\", function () {",
									"//     pm.expect(jsonData.total).to.eql(3100);",
									"// });",
									"",
									"pm.test(\"Check order overall approved\", function () {",
									"",
									"    var expectedOrder = {",
									"            \"orderId\": pm.globals.get(\"orderId\"),",
									"            \"userId\": 15,",
									"            \"itemId\": 100,",
									"            \"price\": 57000,",
									"            \"deliveryDate\": \"2031-07-15T00:00:00Z\",",
									"            \"paymentStatus\": \"REJECTED\",",
									"            \"deliveryStatus\": \"APPROVED\",",
									"            \"storeStatus\": \"APPROVED\",",
									"            \"overallStatus\": \"REJECTED\"",
									"        };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 check delivery rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check delivery rolled back\", function () {",
									"",
									"    var expected = {",
									"        \"deliveryId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\":  pm.globals.get(\"orderId\"),",
									"        \"deliveryDate\": \"2031-07-15T00:00:00Z\",",
									"        \"deliveryStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8083/deliveries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 check store rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check store rolled back\", function () {",
									"",
									"    var expected =     {",
									"        \"storageId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\": pm.globals.get(\"orderId\"),",
									"        \"itemId\": 100,",
									"        \"storeStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/stores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 create order delivery date too early",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 350,\r\n    \"deliveryDate\": \"2011-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.1. check order created but delivery rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check order overall approved\", function () {",
									"",
									"    var expectedOrder = {",
									"            \"orderId\": pm.globals.get(\"orderId\"),",
									"            \"userId\": 15,",
									"            \"itemId\": 100,",
									"            \"price\": 350,",
									"            \"deliveryDate\": \"2011-07-15T00:00:00Z\",",
									"            \"paymentStatus\": \"APPROVED\",",
									"            \"deliveryStatus\": \"REJECTED\",",
									"            \"storeStatus\": \"APPROVED\",",
									"            \"overallStatus\": \"REJECTED\"",
									"        };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 check payment rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check delivery rolled back\", function () {",
									"",
									"    var expected = {",
									"        \"paymentId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\":  pm.globals.get(\"orderId\"),",
									"        \"price\": 350,",
									"        \"paymentStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/payments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.3 check store rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check store rolled back\", function () {",
									"",
									"    var expected =     {",
									"        \"storageId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\": pm.globals.get(\"orderId\"),",
									"        \"itemId\": 100,",
									"        \"storeStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/stores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. create order item not available in store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId\", jsonData.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 2,\r\n    \"price\": 350,\r\n    \"deliveryDate\": \"2031-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.1 check order created but store rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check order overall approved but store rejected\", function () {",
									"",
									"    var expected = {",
									"            \"orderId\": pm.globals.get(\"orderId\"),",
									"            \"userId\": 15,",
									"            \"itemId\": 2,",
									"            \"price\": 350,",
									"            \"deliveryDate\": \"2031-07-15T00:00:00Z\",",
									"            \"paymentStatus\": \"APPROVED\",",
									"            \"deliveryStatus\": \"APPROVED\",",
									"            \"storeStatus\": \"REJECTED\",",
									"            \"overallStatus\": \"REJECTED\"",
									"        };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.2 check delivery rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check delivery rolled back\", function () {",
									"",
									"    var expected = {",
									"        \"deliveryId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\":  pm.globals.get(\"orderId\"),",
									"        \"deliveryDate\": \"2031-07-15T00:00:00Z\",",
									"        \"deliveryStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8083/deliveries",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"deliveries"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.3 check payment rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check payment rolled back\", function () {",
									"",
									"    var expected =     {",
									"        \"paymentId\": pm.globals.get(\"orderId\"),",
									"        \"orderId\": pm.globals.get(\"orderId\"),",
									"        \"price\": 350,",
									"        \"paymentStatus\": \"ROLLED_BACK\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expected);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 100,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-07-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/payments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"payments"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}