{
	"info": {
		"_postman_id": "304b499c-fbe5-4502-b068-681332ead390",
		"name": "Arch Final Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "reset all",
			"item": [
				{
					"name": "reset tours",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/resetTours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"resetTours"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/resetUsers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"resetUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8083/resetPayments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"resetPayments"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset payments Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/resetOrders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"resetOrders"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset flights bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/resetFlights",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"resetFlights"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset hotels bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/resetHotelsBookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"resetHotelsBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "reset successful orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/resetSuccessfulOrders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"resetSuccessfulOrders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "health check all",
			"item": [
				{
					"name": "health check tours service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "health check orders service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "health check payments service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8083/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "health check flights service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8084/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "health check hotels service Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8085/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users management",
			"item": [
				{
					"name": "create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"adminId\", jsonData.userId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vasya\",\n    \"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "create customer 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerId1\", jsonData.userId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alex\",\n    \"role\": \"CUSTOMER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "create customer 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"customerId2\", jsonData.userId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ivan\",\n    \"role\": \"CUSTOMER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "check 3 users created with proper roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check 3 users created\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.length).to.eql(3);",
									"",
									"    var expectedUser1 = {",
									"        \"userId\": pm.globals.get(\"adminId\"),",
									"        \"name\": \"Vasya\",",
									"        \"role\": \"ADMIN\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedUser1);",
									"",
									"    var expectedUser2 = {",
									"        \"userId\": pm.globals.get(\"customerId1\"),",
									"        \"name\": \"Alex\",",
									"        \"role\": \"CUSTOMER\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedUser2);",
									"",
									"    var expectedUser3 = {",
									"        \"userId\": pm.globals.get(\"customerId2\"),",
									"        \"name\": \"Ivan\",",
									"        \"role\": \"CUSTOMER\"",
									"    };",
									"    pm.expect(pm.response.json()).to.deep.include(expectedUser3);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tours service tests",
			"item": [
				{
					"name": "health check tours service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "check no tours yet Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check no tours yet\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "try to create tour not authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is UNAUTHORIZED\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountans in Europe\",\r\n    \"price\": 7000,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Innsbruck\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "try to create tour not admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is FORBIDDEN\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{customerId1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountans in Europe\",\r\n    \"price\": 7000,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Innsbruck\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tour 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"tourId1\", jsonData.tourId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountans in Europe\",\r\n    \"price\": 7000,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Innsbruck\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "check tour 1 created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check tour1 created\", function () {",
									"",
									"    var expectedTour = {",
									"        \"tourId\": pm.globals.get(\"tourId1\"),",
									"        \"name\": \"Mountains view\",",
									"        \"description\": \"You will be skiing in most beautiful mountans in Europe\",",
									"        \"price\": 7000,",
									"        \"fromDate\": \"2021-07-15T00:00:00Z\",",
									"        \"toDate\": \"2021-07-22T00:00:00Z\",",
									"        \"fromDestination\": \"Moscow\",",
									"        \"toDestination\": \"Innsbruck\",",
									"        \"hotelId\": 5",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedTour);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours/{{tourId1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours",
								"{{tourId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update tour 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountans in Europe\",\r\n    \"price\": 3500,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Murmansk\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours/{{tourId1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours",
								"{{tourId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "check tour 1 updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check tour1 created\", function () {",
									"",
									"    var expectedTour = {",
									"        \"tourId\": pm.globals.get(\"tourId1\"),",
									"        \"name\": \"Mountains view\",",
									"        \"description\": \"You will be skiing in most beautiful mountans in Europe\",",
									"        \"price\": 3500,",
									"        \"fromDate\": \"2021-07-15T00:00:00Z\",",
									"        \"toDate\": \"2021-07-22T00:00:00Z\",",
									"        \"fromDestination\": \"Moscow\",",
									"        \"toDestination\": \"Murmansk\",",
									"        \"hotelId\": 5",
									"    };",
									"    ",
									"    pm.expect(pm.response.json()).to.deep.include(expectedTour);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours/{{tourId1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours",
								"{{tourId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tour 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"tourId2\", jsonData.tourId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"North Yachting\",\r\n    \"description\": \"You will be yachting in most beautiful fjords in Europe\",\r\n    \"price\": 4999,\r\n    \"fromDate\": \"2021-09-10\",\r\n    \"toDate\": \"2021-09-17\",\r\n    \"fromDestination\": \"Saint Petersburg\",\r\n    \"toDestination\": \"Oslo\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "check tour 2 created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check tour 2 created\", function () {",
									"",
									"    var expectedTour = {",
									"        \"tourId\": pm.globals.get(\"tourId2\"),",
									"        \"name\": \"North Yachting\",",
									"        \"description\": \"You will be yachting in most beautiful fjords in Europe\",",
									"        \"price\": 4999,",
									"        \"fromDate\": \"2021-09-10T00:00:00Z\",",
									"        \"toDate\": \"2021-09-17T00:00:00Z\",",
									"        \"fromDestination\": \"Saint Petersburg\",",
									"        \"toDestination\": \"Oslo\",",
									"        \"hotelId\": 5",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedTour);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours/{{tourId2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours",
								"{{tourId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tour 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"tourId3\", jsonData.tourId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountans in Europe\",\r\n    \"price\": 3500,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Pskov\",\r\n    \"hotelId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "check 3 tours exist already",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check 3 tours exist already\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete tour 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours/{{tourId3}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours",
								"{{tourId3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "check only 2 tours left",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check 2 tours left\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.length).to.eql(2);",
									"    var expectedTour1 = {",
									"        \"tourId\": pm.globals.get(\"tourId1\"),",
									"        \"name\": \"Mountains view\",",
									"        \"description\": \"You will be skiing in most beautiful mountans in Europe\",",
									"        \"price\": 3500,",
									"        \"fromDate\": \"2021-07-15T00:00:00Z\",",
									"        \"toDate\": \"2021-07-22T00:00:00Z\",",
									"        \"fromDestination\": \"Moscow\",",
									"        \"toDestination\": \"Murmansk\",",
									"        \"hotelId\": 5",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedTour1);",
									"",
									"    var expectedTour2 = {",
									"        \"tourId\": pm.globals.get(\"tourId2\"),",
									"        \"name\": \"North Yachting\",",
									"        \"description\": \"You will be yachting in most beautiful fjords in Europe\",",
									"        \"price\": 4999,",
									"        \"fromDate\": \"2021-09-10T00:00:00Z\",",
									"        \"toDate\": \"2021-09-17T00:00:00Z\",",
									"        \"fromDestination\": \"Saint Petersburg\",",
									"        \"toDestination\": \"Oslo\",",
									"        \"hotelId\": 5",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedTour2);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 15,\r\n    \"itemId\": 41,\r\n    \"price\": 3500,\r\n    \"deliveryDate\": \"2021-05-15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tour 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"tourId4\", jsonData.tourId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mountains view\",\r\n    \"description\": \"You will be skiing in most beautiful mountains in Europe\",\r\n    \"price\": 6500,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-22\",\r\n    \"fromDestination\": \"Moscow\",\r\n    \"toDestination\": \"Zurich\",\r\n    \"hotelId\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tour 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"tourId5\", jsonData.tourId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{adminId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"City walk\",\r\n    \"description\": \"You will be staying in most beautiful district in Europe\",\r\n    \"price\": 5,\r\n    \"fromDate\": \"2021-07-15\",\r\n    \"toDate\": \"2021-07-16\",\r\n    \"fromDestination\": \"Saint Petersburg\",\r\n    \"toDestination\": \"Kupchino\",\r\n    \"hotelId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/tours",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "check tours filtered and sorted properly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check 2 tours returned sorted and filtering applied\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData.length).to.eql(2);",
									"    var expectedTour1 = {",
									"        \"tourId\": pm.globals.get(\"tourId5\"),",
									"        \"name\": \"City walk\",",
									"        \"description\": \"You will be staying in most beautiful district in Europe\",",
									"        \"price\": 5,",
									"        \"fromDate\": \"2021-07-15T00:00:00Z\",",
									"        \"toDate\": \"2021-07-16T00:00:00Z\",",
									"        \"fromDestination\": \"Saint Petersburg\",",
									"        \"toDestination\": \"Kupchino\",",
									"        \"hotelId\": 1",
									"    };",
									"",
									"    pm.expect(pm.response.json()[0]).to.deep.include(expectedTour1);",
									"",
									"    var expectedTour2 = {",
									"        \"tourId\": pm.globals.get(\"tourId2\"),",
									"        \"name\": \"North Yachting\",",
									"        \"description\": \"You will be yachting in most beautiful fjords in Europe\",",
									"        \"price\": 4999,",
									"        \"fromDate\": \"2021-09-10T00:00:00Z\",",
									"        \"toDate\": \"2021-09-17T00:00:00Z\",",
									"        \"fromDestination\": \"Saint Petersburg\",",
									"        \"toDestination\": \"Oslo\",",
									"        \"hotelId\": 5",
									"    };",
									"",
									"    pm.expect(pm.response.json()[1]).to.deep.include(expectedTour2);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/toursSearchFilter?orderField=price&fromDestination=Saint%20Petersburg",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"toursSearchFilter"
							],
							"query": [
								{
									"key": "orderField",
									"value": "price"
								},
								{
									"key": "fromDestination",
									"value": "Saint%20Petersburg"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orders service tests",
			"item": [
				{
					"name": "health check orders service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order 1 -- try to buy tour all good",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId1\", jsonData.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{customerId1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tourId\": {{tourId1}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 1 completely approved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check order 1 completely approved\", function () {",
									"",
									"    var expectedOrder = {",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId1\")),",
									"        \"tourId\": parseInt(pm.globals.get(\"tourId1\")),",
									"        \"userId\": parseInt(pm.globals.get(\"customerId1\")),",
									"        \"paymentStatus\": \"APPROVED\",",
									"        \"flightBookingStatus\": \"APPROVED\",",
									"        \"hotelBookingStatus\": \"APPROVED\",",
									"        \"overallStatus\": \"APPROVED\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order 1 -- try to do same order again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Conflict\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"type": "text",
								"value": "{{customerId1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tourId\": {{tourId1}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order 2 -- try to buy tour too expensive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId2\", jsonData.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{customerId1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tourId\": {{tourId4}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 2 rejected because payment rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check order 2 payment rejected\", function () {",
									"",
									"    var expectedOrder = {",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId2\")),",
									"        \"tourId\": parseInt(pm.globals.get(\"tourId4\")),",
									"        \"userId\": parseInt(pm.globals.get(\"customerId1\")),",
									"        \"paymentStatus\": \"REJECTED\",",
									"        \"flightBookingStatus\": \"APPROVED\",",
									"        \"hotelBookingStatus\": \"APPROVED\",",
									"        \"overallStatus\": \"REJECTED\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 2 flight booking rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check flight booking rolled back\", function () {",
									"",
									"    var expectedBooking =     {",
									"        \"flightId\": parseInt(pm.globals.get(\"orderId2\")),",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId2\")),",
									"        \"fromDestination\": \"Moscow\",",
									"        \"toDestination\": \"Zurich\",",
									"        \"flightStatus\": \"ROLLED_BACK\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedBooking);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/flights",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"flights"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 2 hotel booking rolled back",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check order 2 payment rejected\", function () {",
									"",
									"    var expectedBooking =     {",
									"        \"hotelBookingId\": parseInt(pm.globals.get(\"orderId2\")),",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId2\")),",
									"        \"hotelId\": 15,",
									"        \"hotelBookingStatus\": \"ROLLED_BACK\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedBooking);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/hotelsBookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"hotelsBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "order 3 -- try to buy tour no flight available",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId3\", jsonData.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{customerId1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": {{tourId2}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 3 rejected because flight booking rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check order 3 payment rejected\", function () {",
									"",
									"    var expectedOrder = {",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId3\")),",
									"        \"tourId\": parseInt(pm.globals.get(\"tourId2\")),",
									"        \"userId\": parseInt(pm.globals.get(\"customerId1\")),",
									"        \"paymentStatus\": \"APPROVED\",",
									"        \"flightBookingStatus\": \"REJECTED\",",
									"        \"hotelBookingStatus\": \"APPROVED\",",
									"        \"overallStatus\": \"REJECTED\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "order 4 -- try to buy tour no hotel available",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"orderId4\", jsonData.orderId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Request-User",
								"value": "{{customerId1}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tourId\": {{tourId5}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check order 4 rejected because hotel booking rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check order 4 hotel booking rejected\", function () {",
									"",
									"    var expectedOrder = {",
									"        \"orderId\": parseInt(pm.globals.get(\"orderId4\")),",
									"        \"tourId\": parseInt(pm.globals.get(\"tourId5\")),",
									"        \"userId\": parseInt(pm.globals.get(\"customerId1\")),",
									"        \"paymentStatus\": \"APPROVED\",",
									"        \"flightBookingStatus\": \"APPROVED\",",
									"        \"hotelBookingStatus\": \"REJECTED\",",
									"        \"overallStatus\": \"REJECTED\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "check successfulOrders search index updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check successful order index updated\", function () {",
									"",
									"    var expectedOrder =     {",
									"        \"successfulOrderId\": ",
									"        parseInt(pm.globals.get(\"tourId5\")) + 1,",
									"        \"tourId\": parseInt(pm.globals.get(\"tourId1\")),",
									"        \"tourName\": \"Mountains view\",",
									"        \"tourDescription\": \"You will be skiing in most beautiful mountans in Europe\",",
									"        \"price\": 3500,",
									"        \"fromDate\": \"2021-07-15T00:00:00Z\",",
									"        \"toDate\": \"2021-07-22T00:00:00Z\",",
									"        \"fromDestination\": \"Moscow\",",
									"        \"toDestination\": \"Murmansk\",",
									"        \"hotelId\": 5,",
									"        \"userId\": parseInt(pm.globals.get(\"customerId1\")),",
									"        \"userName\": \"Alex\",",
									"        \"overallOrderStatus\": \"APPROVED\"",
									"    };",
									"",
									"    pm.expect(pm.response.json()).to.deep.include(expectedOrder);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/successfulOrders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"successfulOrders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "payments service test",
			"item": [
				{
					"name": "health check payments service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8083/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8083/payments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"payments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "flights service",
			"item": [
				{
					"name": "health check flights service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8084/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all flights",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8084/flights",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8084",
							"path": [
								"flights"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "hotels service",
			"item": [
				{
					"name": "health check hotels service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8085/health",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all hotel bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 5,\n    \"tourId\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/hotelsBookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"hotelsBookings"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}